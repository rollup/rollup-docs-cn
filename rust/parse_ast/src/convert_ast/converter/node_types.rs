// These need to reflect the order in the JavaScript decoder
pub const TYPE_ARRAY_EXPRESSION: [u8; 4] = 0u32.to_ne_bytes();
pub const TYPE_ARRAY_PATTERN: [u8; 4] = 1u32.to_ne_bytes();
pub const TYPE_ARROW_FUNCTION_EXPRESSION: [u8; 4] = 2u32.to_ne_bytes();
pub const TYPE_ASSIGNMENT_EXPRESSION: [u8; 4] = 3u32.to_ne_bytes();
pub const TYPE_ASSIGNMENT_PATTERN: [u8; 4] = 4u32.to_ne_bytes();
pub const TYPE_AWAIT_EXPRESSION: [u8; 4] = 5u32.to_ne_bytes();
pub const TYPE_BINARY_EXPRESSION: [u8; 4] = 6u32.to_ne_bytes();
pub const TYPE_BLOCK_STATEMENT: [u8; 4] = 7u32.to_ne_bytes();
pub const TYPE_BREAK_STATEMENT: [u8; 4] = 8u32.to_ne_bytes();
pub const TYPE_CALL_EXPRESSION: [u8; 4] = 9u32.to_ne_bytes();
pub const TYPE_CATCH_CLAUSE: [u8; 4] = 10u32.to_ne_bytes();
pub const TYPE_CHAIN_EXPRESSION: [u8; 4] = 11u32.to_ne_bytes();
pub const TYPE_CLASS_BODY: [u8; 4] = 12u32.to_ne_bytes();
pub const TYPE_CLASS_DECLARATION: [u8; 4] = 13u32.to_ne_bytes();
pub const TYPE_CLASS_EXPRESSION: [u8; 4] = 14u32.to_ne_bytes();
pub const TYPE_CONDITIONAL_EXPRESSION: [u8; 4] = 15u32.to_ne_bytes();
pub const TYPE_CONTINUE_STATEMENT: [u8; 4] = 16u32.to_ne_bytes();
pub const TYPE_DEBUGGER_STATEMENT: [u8; 4] = 17u32.to_ne_bytes();
pub const TYPE_DO_WHILE_STATEMENT: [u8; 4] = 18u32.to_ne_bytes();
pub const TYPE_EMPTY_STATEMENT: [u8; 4] = 19u32.to_ne_bytes();
pub const TYPE_EXPORT_ALL_DECLARATION: [u8; 4] = 20u32.to_ne_bytes();
pub const TYPE_EXPORT_DEFAULT_DECLARATION: [u8; 4] = 21u32.to_ne_bytes();
pub const TYPE_EXPORT_NAMED_DECLARATION: [u8; 4] = 22u32.to_ne_bytes();
pub const TYPE_EXPORT_SPECIFIER: [u8; 4] = 23u32.to_ne_bytes();
pub const TYPE_EXPRESSION_STATEMENT: [u8; 4] = 24u32.to_ne_bytes();
pub const TYPE_FOR_IN_STATEMENT: [u8; 4] = 25u32.to_ne_bytes();
pub const TYPE_FOR_OF_STATEMENT: [u8; 4] = 26u32.to_ne_bytes();
pub const TYPE_FOR_STATEMENT: [u8; 4] = 27u32.to_ne_bytes();
pub const TYPE_FUNCTION_DECLARATION: [u8; 4] = 28u32.to_ne_bytes();
pub const TYPE_FUNCTION_EXPRESSION: [u8; 4] = 29u32.to_ne_bytes();
pub const TYPE_IDENTIFIER: [u8; 4] = 30u32.to_ne_bytes();
pub const TYPE_IF_STATEMENT: [u8; 4] = 31u32.to_ne_bytes();
pub const TYPE_IMPORT_ATTRIBUTE: [u8; 4] = 32u32.to_ne_bytes();
pub const TYPE_IMPORT_DECLARATION: [u8; 4] = 33u32.to_ne_bytes();
pub const TYPE_IMPORT_DEFAULT_SPECIFIER: [u8; 4] = 34u32.to_ne_bytes();
pub const TYPE_IMPORT_EXPRESSION: [u8; 4] = 35u32.to_ne_bytes();
pub const TYPE_IMPORT_NAMESPACE_SPECIFIER: [u8; 4] = 36u32.to_ne_bytes();
pub const TYPE_IMPORT_SPECIFIER: [u8; 4] = 37u32.to_ne_bytes();
pub const TYPE_LABELED_STATEMENT: [u8; 4] = 38u32.to_ne_bytes();
pub const TYPE_LITERAL_STRING: [u8; 4] = 39u32.to_ne_bytes();
pub const TYPE_LITERAL_BOOLEAN: [u8; 4] = 40u32.to_ne_bytes();
pub const TYPE_LITERAL_NUMBER: [u8; 4] = 41u32.to_ne_bytes();
pub const TYPE_LITERAL_NULL: [u8; 4] = 42u32.to_ne_bytes();
pub const TYPE_LITERAL_REGEXP: [u8; 4] = 43u32.to_ne_bytes();
pub const TYPE_LITERAL_BIGINT: [u8; 4] = 44u32.to_ne_bytes();
pub const TYPE_LOGICAL_EXPRESSION: [u8; 4] = 45u32.to_ne_bytes();
pub const TYPE_MEMBER_EXPRESSION: [u8; 4] = 46u32.to_ne_bytes();
pub const TYPE_META_PROPERTY: [u8; 4] = 47u32.to_ne_bytes();
pub const TYPE_METHOD_DEFINITION: [u8; 4] = 48u32.to_ne_bytes();
pub const TYPE_NEW_EXPRESSION: [u8; 4] = 49u32.to_ne_bytes();
pub const TYPE_OBJECT_EXPRESSION: [u8; 4] = 50u32.to_ne_bytes();
pub const TYPE_OBJECT_PATTERN: [u8; 4] = 51u32.to_ne_bytes();
pub const TYPE_PRIVATE_IDENTIFIER: [u8; 4] = 52u32.to_ne_bytes();
pub const TYPE_PROGRAM: [u8; 4] = 53u32.to_ne_bytes();
pub const TYPE_PROPERTY: [u8; 4] = 54u32.to_ne_bytes();
pub const TYPE_PROPERTY_DEFINITION: [u8; 4] = 55u32.to_ne_bytes();
pub const TYPE_REST_ELEMENT: [u8; 4] = 56u32.to_ne_bytes();
pub const TYPE_RETURN_STATEMENT: [u8; 4] = 57u32.to_ne_bytes();
pub const TYPE_SEQUENCE_EXPRESSION: [u8; 4] = 58u32.to_ne_bytes();
pub const TYPE_SPREAD_ELEMENT: [u8; 4] = 59u32.to_ne_bytes();
pub const TYPE_STATIC_BLOCK: [u8; 4] = 60u32.to_ne_bytes();
pub const TYPE_SUPER: [u8; 4] = 61u32.to_ne_bytes();
pub const TYPE_SWITCH_CASE: [u8; 4] = 62u32.to_ne_bytes();
pub const TYPE_SWITCH_STATEMENT: [u8; 4] = 63u32.to_ne_bytes();
pub const TYPE_TAGGED_TEMPLATE_EXPRESSION: [u8; 4] = 64u32.to_ne_bytes();
pub const TYPE_TEMPLATE_ELEMENT: [u8; 4] = 65u32.to_ne_bytes();
pub const TYPE_TEMPLATE_LITERAL: [u8; 4] = 66u32.to_ne_bytes();
pub const TYPE_THIS_EXPRESSION: [u8; 4] = 67u32.to_ne_bytes();
pub const TYPE_THROW_STATEMENT: [u8; 4] = 68u32.to_ne_bytes();
pub const TYPE_TRY_STATEMENT: [u8; 4] = 69u32.to_ne_bytes();
pub const TYPE_UNARY_EXPRESSION: [u8; 4] = 70u32.to_ne_bytes();
pub const TYPE_UPDATE_EXPRESSION: [u8; 4] = 71u32.to_ne_bytes();
pub const TYPE_VARIABLE_DECLARATION: [u8; 4] = 72u32.to_ne_bytes();
pub const TYPE_VARIABLE_DECLARATOR: [u8; 4] = 73u32.to_ne_bytes();
pub const TYPE_WHILE_STATEMENT: [u8; 4] = 74u32.to_ne_bytes();
pub const TYPE_YIELD_EXPRESSION: [u8; 4] = 75u32.to_ne_bytes();
pub const TYPE_PARSE_ERROR: [u8; 4] = 76u32.to_ne_bytes();
